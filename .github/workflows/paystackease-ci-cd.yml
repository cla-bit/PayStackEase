name: paystackease-ci-cd

on: [push, pull_request]

jobs:
  ci:
    # Set up operating system
    runs-on: ubuntu-latest

    # Define job steps
    steps:
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9


    - name: Check-out repository
      uses: actions/checkout@v2

    - name: Install poetry
      uses: snok/install-poetry@v1

    - name: Install package
      run: poetry install

    - name: Format code with Black
      run: poetry run black .

    - name: Run PayStackEase with pylint
      run: poetry run pylint paystackease --errors-only --rcfile=.pylintrc

    - name: Run test with pylint
      run: poetry run pylint tests --errors-only --rcfile=.pylintrc

    - name: Test with pytest (using environment variables)
      env:
        PAYSTACK_SECRET_KEY: ${{ secrets.PAYSTACK_SECRET_KEY }}
      run: poetry run pytest tests/ --cov=paystackease --cov-report=xml

    - name: Use CodeCov to track coverage
      uses: codecov/codecov-action@v2
      with:
        files: ./coverage.xml  # coverage report

    - name: Build documentation
      run: poetry run make html --directory docs/

  cd:
    permissions:
      id-token: write
      contents: write

    # only run this job if  the "ci" job passes
    needs: ci

    # Only run this job if new work is pushed to the "main" branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    # set up operating system
    runs-on: ubuntu-latest

    # Define job steps
    steps:
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Check-out repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Use Python Semantic Release to prepare release
      id: release
      uses: python-semantic-release/python-semantic-release@v9.6.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish to TestPYPI
      uses: pypa/gh-action-pypi-publish@release/v1
      if: steps.release.outputs.released == 'true'
      with:
        repository-url: https://test.pypi.org/legacy/
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}

    - name: Test install from TestPYPI
      run: pip install --index-url https://test.pypi.org/simple --extra-index-url https://pypi.org/simple paystackease

    - name: Publish to PYPI
      uses: pypa/gh-action-pypi-publish@release/v1
      if: steps.release.outputs.released == 'true'
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Publish Package distributions to GitHub Releases
      uses: python-semantic-release/upload-to-gh-release@main
      if: steps.release.outputs.released == 'true'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
